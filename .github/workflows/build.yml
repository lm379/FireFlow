name: Build binary and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # Create release first
  create-release:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    outputs:
      release-id: ${{ steps.create-release.outputs.id }}
      upload-url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: create-release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: |
          # Determine file extension
          ext=""
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            ext=".exe"
          fi
          
          # Build output filename
          output="fireflow-${{ matrix.goos }}-${{ matrix.goarch }}${ext}"
          archive="fireflow-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz"
          
          # Build the binary with optimizations
          echo "Building ${output} for ${{ matrix.goos }}/${{ matrix.goarch }}..."
          go build \
            -ldflags="-s -w -X main.version=${GITHUB_REF#refs/tags/} -X main.buildTime=$(date -u '+%Y-%m-%d_%H:%M:%S_UTC') -X main.goVersion=$(go version | cut -d' ' -f3)" \
            -trimpath \
            -o "${output}" \
            ./cmd/server
          
          # Verify the binary was created
          if [[ ! -f "${output}" ]]; then
            echo "Error: Binary ${output} was not created"
            exit 1
          fi
          
          # Create tarball
          tar -czf "${archive}" "${output}"
          
          echo "✅ Built: ${output} ($(du -h "${output}" | cut -f1))"
          echo "✅ Archive: ${archive} ($(du -h "${archive}" | cut -f1))"

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: fireflow-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}